language: java

services:
  - docker

os:
  - linux

jdk:
  - openjdk8

git:
  depth: 3

branches:
  only:
    - master

cache:
  directories:
    - $HOME/.m2
    - $HOME/.ivy2
    - $HOME/.cache
    - $HOME/.zinc
    - docker_images

# Install must be set to prevent default `go get` to run.
# The dependencies have already been vendored by `dep` so
# we don't need to fetch them.
install:
  -

stages:
  - test
  - docker-build

jobs:
  include:
    - stage: test
      env:
        - SPARK_VERSION=2.4.7
      jdk:
        - openjdk8
      script:
        - mvn test -B
    - stage: test
      env:
        - SPARK_VERSION=3.0.2
      jdk:
        - openjdk11
      script:
        - mvn test -B -Pspark3
    - stage: docker-build
      if: (branch = master)
      env:
        - SPARK_VERSION=2.4.7
      jdk:
        - openjdk8
      before_install:
        - docker load -i docker_images/images.tar || true
        - docker images
      script:
        - docker build -t spark-base:2.4.7 -f src/main/docker/spark/Dockerfile src/main/docker/spark
        - docker images
        - mvn package jib:dockerBuild -DskipTests -Plocal-to-ghcr
      before_cache:
        - docker save -o docker_images/images.tar $(docker images -a -q)
      before_deploy:
        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin "$DOCKER_HOSTNAME"
      deploy:
        skip_cleanup: true
        provider: script
        script: docker push ghcr.io/the-mesh-for-data/mover:latest
        on:
          condition: $TRAVIS_PULL_REQUEST = false
          branch: master
    - stage: docker-build
      if: (branch = master)
      env:
        - SPARK_VERSION=3.0.2
      jdk:
        - openjdk11
      before_install:
        - docker load -i docker_images/images.tar || true
        - docker images
      script:
        - docker build -t spark-base:3.0.2 -f src/main/docker/spark/Dockerfile src/main/docker/spark
        - docker images
        - mvn package jib:dockerBuild -DskipTests -Plocal-to-ghcr -Pspark3
      before_cache:
        - docker save -o docker_images/images.tar $(docker images -a -q)
      before_deploy:
        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin "$DOCKER_HOSTNAME"
      deploy:
        skip_cleanup: true
        provider: script
        script: docker push ghcr.io/the-mesh-for-data/mover:latest-spark3
        on:
          condition: $TRAVIS_PULL_REQUEST = false
          branch: master
notifications:
  email: false
